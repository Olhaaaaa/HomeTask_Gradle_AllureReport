plugins {
    id 'java'
    id "io.qameta.allure" version "2.8.1"
}
apply plugin:'io.qameta.allure'

allure {
    version = '2.8.1'
    autoconfigure = true
    aspectjweaver = true
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

group = 'com.codeinvestigator'
version = '0.0.1-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    flatDir{
        dirs 'libs'
    }
//    mavenLocal()
    mavenCentral()
}


dependencies {
    implementation fileTree(dir: 'libs', includes: ['*.jar'])
    implementation("org.aspectj:aspectjrt:1.9.9.1")
    implementation('org.aspectj:aspectjweaver:1.9.9.1')
    implementation("org.testng:testng:7.6.0")
    compile(group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.10'){
        exclude group: 'org.slf4j'
    }
    implementation group: 'org.assertj', name: 'assertj-core', version: '3.23.1'
    implementation group: 'org.aspectj', name: 'aspectjtools', version: '1.9.9.1'
    implementation group: 'com.github.automatedowl', name: 'allure-environment-writer', version: '1.0.0'
    testImplementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'
    implementation group: 'org.testng', name: 'testng', version: '7.6.0'
//    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    testImplementation group: 'org.apache.commons', name: 'commons-configuration2', version: '2.7'
    implementation group: 'io.qameta.allure', name: 'allure-maven', version: '2.11.2'
//    implementation group: 'io.qameta.allure', name: 'allure-commandline', version: '2.18.1', ext: 'pom'
//    implementation group: 'io.qameta.allure', name: 'allure-selenide', version: '2.18.1'
    implementation group: 'io.qameta.allure', name: 'allure-testng', version: '2.18.1'
    testImplementation group: 'org.json', name: 'json', version: '20200518'
    testImplementation group: 'org.codehaus.jettison', name: 'jettison', version: '1.5.0'
    testImplementation group: 'net.minidev', name: 'json-smart', version: '2.4.8'


//    implementation group: 'com.google.inject', name: 'guice', version: '4.2.3'
//    implementation group: 'com.slack.api', name: 'slack-api-client', version: '1.1.3'
//
//    compile group: 'com.relevantcodes', name: 'extentreports', version: '2.41.2'
//    compile group: 'io.appium', name: 'java-client', version: '7.1.0'
//    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
//    implementation group: 'io.netty', name: 'netty-all', version: '5.0.0.Alpha2'
    implementation 'io.netty:netty-transport-native-epoll:4.1.77.Final'
//    implementation 'io.netty:netty-transport-native-kqueue:4.1.73.Final'
//    implementation 'io.netty:netty-transport-native-epoll:4.1.78.Final'
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.2.0'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.2.1'
    implementation group: 'org.apache.maven.surefire', name: 'surefire-testng', version: '3.0.0-M6'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.2'
    implementation group: 'log4j', name: 'log4j', version: '1.2.17'
//    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.36'
    implementation group: 'org.apache.poi', name: 'poi', version: '5.2.2'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.2'
    implementation 'com.google.guava:guava:31.1-jre'
////    testCompile group: 'org.uncommons', name: 'reportng', version: '1.1.4'
//    compile group: 'org.apache.velocity', name: 'velocity', version: '1.7'

}

test {
    systemProperties(System.getProperties())
    useTestNG() {
        suites 'testng.xml'
        options.useDefaultListeners true
        testLogging {
            events = ['PASSED', 'FAILED', 'SKIPPED']
        }
    }
}



task bird {
    group 'birds'
    description 'My birds'

    //configuration
    println 'My configuration bird'
    ext.birds = 'There are 5 birds'

    //execution
    doLast { println 'Birds are flying' }
    doFirst { println 'Hi there' }
    doLast { println '!!!!' }
    doLast { println "Birds: $birds" }
}

task animal(type: AnimalsTask, group: 'animals') {
    myFile = 'customAnimalFile.txt'
}
